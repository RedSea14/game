DI chuyển nhân vật
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using TMPro;
public class player_code : MonoBehaviour
{
    private enum State { idle,running,jumping,falling}
    private State state = State.idle;
    public Animator hanhdong;
    private Collider2D coll;
    private Rigidbody2D player;
    [SerializeField] private float speed = 5f;
    [SerializeField] private LayerMask ground;
    [SerializeField] private float jumpSpeed = 10f;
    private static GameObject Instance;
    [SerializeField] private int level;
    void Start()
    {
        player = GetComponent<Rigidbody2D>();
        hanhdong = GetComponent<Animator>();
        coll = GetComponent<Collider2D>();

    }
    void Awake()
    {
        OnLevelWasLoaded(level);
        if (Instance == null)
        {
            Instance = gameObject;
            DontDestroyOnLoad(gameObject);
        }
        else
        {
            Destroy(gameObject);
        }
    }
    private void Update()
    {
        
        dichuyen();
        VelocityState();
        hanhdong.SetInteger("state", (int)state);
    }
    private void dichuyen()
    {
        float direction = Input.GetAxis("Horizontal");

        if (direction > 0f)
        {
            player.velocity = new Vector2(direction * speed, player.velocity.y);
            transform.localScale = new Vector2(1, 1);
        }
        else if (direction < 0f)
        {
            player.velocity = new Vector2(direction * speed, player.velocity.y);
            transform.localScale = new Vector2(-1, 1);
        }
        else
        {

        }
        if (Input.GetButtonDown("Jump") && coll.IsTouchingLayers(ground))
        {
            player.velocity = new Vector2(hanhdong.velocity.x, 10f);
            state = State.jumping;
        }
    }
    private void VelocityState()
    {
        if (state==State.jumping)
        {
            if (player.velocity.y < .1f)
            {
                state = State.falling;
            }
        }
        else if (state == State.falling)
        {
            if (coll.IsTouchingLayers(ground))
            {
                state = State.idle;
            }
        }
        else if (Mathf.Abs(player.velocity.x)>2f)
        {
            state = State.running;
        }
        else
        {
            state = State.idle;
        }
    }
    private void OnLevelWasLoaded(int level)
    {
        Vector2 pos = transform.position;
        pos.x = GameObject.FindWithTag("vitri").transform.position.x;
        pos.y = GameObject.FindWithTag("vitri").transform.position.y;
        transform.position = new Vector2(pos.x,pos.y);
    }
    public void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.gameObject.tag == "item")
        {
            Destroy(collision.gameObject);
            count += 5;
            cherytext.text = count.ToString();
        }
        if (collision.gameObject.tag == "gem")
        {
            Destroy(collision.gameObject);
            countgem += 10;
            gemtext.text = countgem.ToString();
        }
    }


    public void OnCollisionEnter2D(Collision2D orther)
    {
        if (orther.gameObject.tag == "Enemy")
        {
            Destroy(orther.gameObject);
        }
    }
}
Camera(Chỉnh offset Z=-10)
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class camera : MonoBehaviour
{
    public Transform target;
    public Vector3 offset;

    public float smoothSpeed = 0.1f;

    private void Start()
    {
        target=GameObject.Find("player-idle-1").GetComponent<Transform>();
    }

    private void LateUpdate()
    {
        SmoothFollow();
    }

    public void SmoothFollow()
    {
        Vector3 targetPos = target.position + offset;
        Vector3 smoothFollow = Vector3.Lerp(transform.position,
        targetPos, smoothSpeed);

        transform.position = smoothFollow;
        transform.LookAt(target);
    }

}
Next level
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class level : MonoBehaviour
{
    public int iLevelToLoad;
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }
    private void OnTriggerEnter2D(Collider2D collision)
    {
        GameObject helo = collision.gameObject;
        if(helo.name== "player-idle-1")
        {
            SceneManager.LoadScene(iLevelToLoad);
        }
    }
}



Menu game
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class Menugame : MonoBehaviour
{
    // Start is called before the first frame update
    public Button playbtn;
    void Start()
    {
        playbtn.onClick.AddListener(PlayGame);
    }

    public void PlayGame()
    {
        SceneManager.LoadScene("SampleScene");
    }
}
Thanh di chuyển lên xuống
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Mace : MonoBehaviour
{
    public float speed = 1f;
    public float range = 3;
    float startingY;
    int dir = 1;
    // Start is called before the first frame update
    void Start()
    {
        startingY = transform.position.y;
    }

    // Update is called once per frame
    void FixedUpdate()
    {
        transform.Translate(Vector2.up * speed * Time.deltaTime * dir);
        if (transform.position.y<startingY|| transform.position.y>startingY+range)
        {
            dir *= -1;
        }
    }
}







Patrol bot
Gắn code patrol vào con quái
-LimitLayer: mốc
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class patrol : MonoBehaviour
{
    [SerializeField]
    LayerMask limitLayer;
    [SerializeField]
    float speed = 10f;
    int dir = -1;
    void Start()
    {
    }
    void Update()
    {
        RaycastHit2D hit = Physics2D.Raycast(transform.position, Vector2.right * dir, 1f, limitLayer);
        if (hit.collider != null)
        {
            dir *= -1;
            transform.localScale = new Vector3(transform.localScale.x * -1, 1, 1);
        }

        transform.Translate(Vector2.right * speed * dir * Time.deltaTime);
    }
}
A* bot
https://arongranberg.com/astar/
Tạo A*(pathfindger)
-diameter=1.3
-obstacle=ground
Tạo Enemy cho con chim vào
-Enemy(Aipath,AI destinaltion cho thg player vào)
-Con chim gắn GFXbot vào(để cái enemy vào)
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Pathfinding;
public class GFXbot : MonoBehaviour
{
    public AIPath aiPath;

    // Update is called once per frame
    void Update()
    {
        if (aiPath.desiredVelocity.x >= 0.01f)
        {
            transform.localScale = new Vector3(-1, 1, 1);
        }
        else if (aiPath.desiredVelocity.y <= -0.01f)
        {
            transform.localScale = new Vector3(1, 1, 1);
        }
    }

}


